rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /users/{uid} {
      allow read: if isSignedIn();
      allow update: if isSignedIn() && uid == request.auth.uid;
      allow update: if isAdmin() &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly(['isApproved','role']);
    }
    match /content/{id} { allow read: if true; allow create, update: if isSignedIn(); }
    match /live_sessions/{id} {
      allow read: if isSignedIn();
      allow create: if isSignedIn()
        && request.resource.data.category is string
        && request.resource.data.title is string
        && request.resource.data.teacherId == request.auth.uid
        && request.resource.data.startAt is timestamp;
      allow update: if isSignedIn() && resource.data.teacherId == request.auth.uid;
    }
    match /test_papers/{id} { allow read: if isSignedIn(); allow create, update: if isSignedIn(); }
    match /notifications/{id} { allow read: if isSignedIn(); allow create: if isAdmin(); }
  }
}
